{
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": ["@typescript-eslint", "jsx-a11y", "import", "unused-imports"],
  "rules": {
    // AGGRESSIVE: Unused imports and variables (NO MERCY)
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],

    // TypeScript specific rules
    "@typescript-eslint/no-unused-vars": "off", // Replaced by unused-imports
    "@typescript-eslint/no-explicit-any": "error", // AGGRESSIVE: No any allowed
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-non-null-assertion": "warn",

    // React specific rules
    "react/react-in-jsx-scope": "off", // Not needed with Next.js
    "react/prop-types": "off", // Using TypeScript for prop validation
    "react/display-name": "warn",
    "react/no-unescaped-entities": "warn",
    "react/jsx-no-target-blank": "error",
    "react/jsx-key": "error",

    // React Hooks rules
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",

    // Accessibility rules
    "jsx-a11y/alt-text": "error",
    "jsx-a11y/aria-props": "error",
    "jsx-a11y/aria-proptypes": "error",
    "jsx-a11y/aria-unsupported-elements": "error",
    "jsx-a11y/role-has-required-aria-props": "error",
    "jsx-a11y/role-supports-aria-props": "error",

    // AGGRESSIVE: Import rules (NO MERCY)
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/no-unresolved": "off", // Handled by TypeScript
    "import/no-duplicates": "error",
    "import/no-unused-modules": "error", // AGGRESSIVE: Block unused modules
    "import/no-anonymous-default-export": "error",
    "import/no-default-export": "error", // AGGRESSIVE: Prefer named exports

    // General code quality rules
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-debugger": "error",
    "no-alert": "error",
    "no-var": "error",
    "prefer-const": "error",
    "no-duplicate-imports": "error",
    "no-unused-expressions": "error",
    "eqeqeq": ["error", "always"],
    "curly": ["error", "all"]
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true
      },
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "overrides": [
    {
      "files": ["**/__tests__/**/*", "**/*.test.*", "**/*.spec.*"],
      "env": {
        "jest": true
      },
      "rules": {
        "@typescript-eslint/no-explicit-any": "off"
      }
    },
    {
      "files": [
        "app/**/page.tsx",
        "app/**/layout.tsx", 
        "app/**/loading.tsx",
        "app/**/error.tsx",
        "app/**/not-found.tsx",
        "app/manifest.ts",
        "app/robots.ts",
        "app/sitemap.ts",
        "pages/**/*.tsx",
        "pages/**/*.ts",
        "next.config.js",
        "tailwind.config.*",
        "playwright.config.*",
        "vitest.config.*",
        "drizzle.config.ts",
        "middleware.ts"
      ],
      "rules": {
        "import/no-default-export": "off", // Next.js requires default exports for pages
        "import/no-anonymous-default-export": "off"
      }
    }
  ]
}
